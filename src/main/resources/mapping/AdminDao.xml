<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.dao.AdminDao">
  <resultMap id="BaseResultMap" type="com.springboot.entity.Admin">
    <id column="adminId" jdbcType="INTEGER" property="adminid" />
    <result column="adminName" jdbcType="VARCHAR" property="adminname" />
    <result column="adminPassword" jdbcType="VARCHAR" property="adminpassword" />
    <result column="adminSex" jdbcType="VARCHAR" property="adminsex" />
    <result column="adminPhone" jdbcType="VARCHAR" property="adminphone" />
    <result column="adminLevel" jdbcType="INTEGER" property="adminlevel" />
  </resultMap>
  <sql id="Base_Column_List">
    adminId, adminName, adminPassword, adminSex, adminPhone, adminLevel
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where adminId = #{adminid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where adminId = #{adminid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="adminId" keyProperty="adminid" parameterType="com.springboot.entity.Admin" useGeneratedKeys="true">
    insert into admin (adminName, adminPassword, adminSex, 
      adminPhone, adminLevel)
    values (#{adminname,jdbcType=VARCHAR}, #{adminpassword,jdbcType=VARCHAR}, #{adminsex,jdbcType=VARCHAR}, 
      #{adminphone,jdbcType=VARCHAR}, #{adminlevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="adminId" keyProperty="adminid" parameterType="com.springboot.entity.Admin" useGeneratedKeys="true">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminname != null">
        adminName,
      </if>
      <if test="adminpassword != null">
        adminPassword,
      </if>
      <if test="adminsex != null">
        adminSex,
      </if>
      <if test="adminphone != null">
        adminPhone,
      </if>
      <if test="adminlevel != null">
        adminLevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminname != null">
        #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpassword != null">
        #{adminpassword,jdbcType=VARCHAR},
      </if>
      <if test="adminsex != null">
        #{adminsex,jdbcType=VARCHAR},
      </if>
      <if test="adminphone != null">
        #{adminphone,jdbcType=VARCHAR},
      </if>
      <if test="adminlevel != null">
        #{adminlevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.entity.Admin">
    update admin
    <set>
      <if test="adminname != null">
        adminName = #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpassword != null">
        adminPassword = #{adminpassword,jdbcType=VARCHAR},
      </if>
      <if test="adminsex != null">
        adminSex = #{adminsex,jdbcType=VARCHAR},
      </if>
      <if test="adminphone != null">
        adminPhone = #{adminphone,jdbcType=VARCHAR},
      </if>
      <if test="adminlevel != null">
        adminLevel = #{adminlevel,jdbcType=INTEGER},
      </if>
    </set>
    where adminId = #{adminid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.entity.Admin">
    update admin
    set adminName = #{adminname,jdbcType=VARCHAR},
      adminPassword = #{adminpassword,jdbcType=VARCHAR},
      adminSex = #{adminsex,jdbcType=VARCHAR},
      adminPhone = #{adminphone,jdbcType=VARCHAR},
      adminLevel = #{adminlevel,jdbcType=INTEGER}
    where adminId = #{adminid,jdbcType=INTEGER}
  </update>
</mapper>